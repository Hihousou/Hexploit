local Services = {
	Players = game:GetService("Players"),
	RS = game:GetService("RunService"),
}

local Library = {}
local Windows = {}

Library.Colors = {
	Primary = Color3.fromRGB(26,26,26),
	Tertiary = Color3.fromRGB(212,92,92)
}

--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
--// Start

local Player = Services.Players.LocalPlayer
local Mouse = Player:GetMouse()
function Dragify(obj)
	task.spawn(function()
		local minitial;
		local initial;
		local isdragging;
		obj.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				isdragging = true;
				minitial = input.Position;
				initial = obj.Position;
				local con;
				con = Services.RS.RenderStepped:Connect(function()
					if isdragging then
						local delta = Vector3.new(Mouse.X, Mouse.Y, 0) - minitial;
						obj.Position = UDim2.new(initial.X.Scale, initial.X.Offset + delta.X, initial.Y.Scale, initial.Y.Offset + delta.Y);
					else
						con:Disconnect();
					end;
				end);
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						isdragging = false;
					end;
				end);
			end;
		end);
	end)
end

function Protect(Gui)
	if syn and syn.protect_gui then
		syn.protect_gui(Gui)
		Gui.Parent = game.CoreGui
	elseif PROTOSMASHER_LOADED then
		Gui.Parent = get_hidden_gui()
	else
		Gui.Parent = game.CoreGui
	end
end

local MainGui = Instance.new("ScreenGui")
MainGui.Name = "hisoustuff"
MainGui.IgnoreGuiInset = true
MainGui.DisplayOrder = 10
Protect(MainGui)

--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
--// Design

local Designs = {
	["Default"] = {
		BackgroundColor3 = Library.Colors.Primary, -- Color3.fromRGB(26,26,26),
		BackgroundTransparency = 0.25,
	},
	["HeaderText"] = {
		BackgroundTransparency = 1,
		Font = Enum.Font.GothamBlack,
		TextColor3 = Color3.fromRGB(200,200,200),
		TextSize = 25,
	},
	
	["Text"] = {
		BackgroundTransparency = 1,
		Font = Enum.Font.Gotham,
		TextColor3 = Color3.fromRGB(200,200,200),
		TextSize = 20,
		TextXAlignment = Enum.TextXAlignment.Left
	},
	["TextButton"] = {
		BackgroundColor3 = Library.Colors.Primary, -- Color3.fromRGB(212,92,92),
		BackgroundTransparency = 0.25,
		Font = Enum.Font.Gotham,
		TextColor3 = Color3.fromRGB(200,200,200),
		TextSize = 20,
		TextXAlignment = Enum.TextXAlignment.Left
	},
	
	["Button"] = {
		BackgroundTransparency = 0.999,
	},
}

function SetDesign(Obj,Set)
	if not Obj then return end

	local Set = Designs[Set or "Default"]
	for Property,Value in pairs(Set)do
		pcall(function()
			Obj[Property] = Value
		end)
	end
	
	pcall(function()
		Obj.BorderSizePixel = 0
	end)
end

function ApplyTextStroke(Obj)
	local Stroke = Instance.new("UIStroke",Obj)
	Stroke.Color = Color3.new(0,0,0)
	Stroke.Thickness = 2
	Stroke.Transparency = 0.5
	return Stroke
end

--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
--// Library

function Library:GetWindows()
	return Windows
end

function Library:Window(Name)
	local Window = Instance.new("Frame",MainGui)
	Window.Name = Name or (#Windows + 1)
	Window.Size = UDim2.new(0,200,0,30)
	Window.Position = UDim2.new(0,200,0,100)
	SetDesign(Window)
	Dragify(Window)
	
	local HeaderText = Instance.new("TextLabel",Window)
	HeaderText.Name = "Header"
	HeaderText.Position = UDim2.new(0,5,0,0)
	HeaderText.Size = UDim2.new(0,200-5,0,30)
	HeaderText.Text = Name or ""
	HeaderText.TextXAlignment = Enum.TextXAlignment.Left
	SetDesign(HeaderText,"HeaderText")
	
	local Container = Instance.new("Frame",Window)
	Container.Name = "Container"
	Container.Position = UDim2.new(0,0,0,35)
	Container.Size = UDim2.new(0,200,0,0)
	SetDesign(Container)
	local List = Instance.new("UIListLayout",Container)
	List.Padding = UDim.new(0,5)
	List.HorizontalAlignment = Enum.HorizontalAlignment.Center
	List.VerticalAlignment = Enum.VerticalAlignment.Center
	
	local Toggle = Instance.new("TextButton",Window)
	Toggle.Name = "Toggle"
	Toggle.Position = UDim2.new(0,170,0,0)
	Toggle.Size = UDim2.new(0,30,0,30)
	Toggle.Text = "="
	Toggle.TextXAlignment = Enum.TextXAlignment.Center
	Toggle.MouseButton1Click:Connect(function()
		Container.Visible = not Container.Visible
		
		if Container.Visible then
			Toggle.Rotation = 0
		else
			Toggle.Rotation = 90
		end
	end)
	SetDesign(Toggle,"HeaderText")
	
	local function New(Pixels,Type)
		Container.Size = Container.Size + UDim2.new(0,0,0,Pixels+10)
		
		local AllocatedFrame = Instance.new(Type or "Frame",Container)
		AllocatedFrame.BackgroundTransparency = 1
		AllocatedFrame.Size = UDim2.new(0,190,0,Pixels)
		
		return AllocatedFrame
	end
	
	local Functions = {}
	function Functions:Label(Text)
		local Frame = New(30)
		local Label = Instance.new("TextLabel",Frame)
		Label.Size = Frame.Size
		Label.Text = Text or ""
		SetDesign(Label,"TextButton")
		ApplyTextStroke(Label)
	end
	function Functions:Button(Name,Callback)
		Name = Name or "Button"
		Callback = Callback or function()end
		
		local Frame = New(30)
		local Button = Instance.new("TextButton",Frame)
		Button.Size = Button.Parent.Size
		Button.Text = " " .. Name
		Button.MouseButton1Click:Connect(Callback)
		SetDesign(Button,"TextButton")
		ApplyTextStroke(Button)
	end
	function Functions:Toggle(Name,Toggled,Callback)
		Name = Name or "Toggle"
		Callback = Callback or function(Bool)end
		
		local Frame = New(30)
		SetDesign(Frame)
		
		local Description = Instance.new("TextLabel",Frame)
		Description.Size = UDim2.new(1,-35,1,0)
		Description.Text = " " .. Name
		Description.TextSize = 20
		SetDesign(Description,"Text")
		ApplyTextStroke(Description)
		
		local Box = Instance.new("Frame",Frame)
		Box.BackgroundColor3 = Library.Colors.Tertiary
		Box.BackgroundTransparency = 0.5
		Box.BorderSizePixel = 0
		Box.Position = UDim2.new(1,-30,0,0)
		Box.Size = UDim2.new(0,30,0,30)
		local Filler = Instance.new("Frame",Box)
		Filler.BackgroundColor3 = Library.Colors.Tertiary
		Filler.BackgroundTransparency = 0.25
		Filler.BorderSizePixel = 0
		Filler.Position = UDim2.new(0,3,0,3)
		Filler.Size = UDim2.new(0,24,0,24)
		Filler.Visible = Toggled
		local Button = Instance.new("ImageButton",Frame)
		Button.Size = Button.Parent.Size
		Button.MouseButton1Click:Connect(function()
			Filler.Visible = not Filler.Visible
			Callback(Filler.Visible)
		end)
		SetDesign(Button,"Button")
		
		if Toggled then
			Callback(true)
		end
	end
	
	function Functions:Destroy()
		Window:Destroy()
		print(Windows)
	end
	
	table.insert(Windows,Functions)
	return Functions
end

function Library:Toggle()
	MainGui.Enabled = not MainGui.Enabled
end

function Library:Destroy()
	MainGui:Destroy()
end

function Library:Test()
	local Window = Library:Window("Universal")
	Window:Toggle("WalkSpeed",false,function(Bool)
		local Speed = 16
		if Bool then
			Speed = 24
		end
		Services.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Speed
	end)
	Window:Button("Destroy",function()
		Window:Destroy()
	end)
end

return Library

--Library:Test()
